# void PosNeg(int n){
#	if(n >= 0){
#		print("É Positivo")
#	}
#	else{
#		print("É Negativo")
#	}
# }

.data
A: .word 6
positivo: .asciiz "Número é Negativo!!! \n"
negativo: .asciiz "Número é Negativo!!! \n"

.text

.globl main

main:

# Leia um valor A da memória
la $t0, A # Lendo endereço da memória
lw $s0, 0($t0) # Identificando o valor encontrado no endereço da memória

add $a0, $s0, $zero # Trasferindo argumentos de valor encontrado para usar na função
jal PosNeg

add $s0, $v0, $zero # Valor de retorno da função
sw $t0, 0($s0) # Armazena o valor do módulo no vetor A, posição de deslocamento 0.

PosNeg:
# Função que identifique se o número é negativo ou não
slt $t0, $a0, $zero # Verificar se o valor $s0 é menor que 0 (Saida 0: FALSO, saída 1: VERDADEIRO)
beq $t0, 1, negativo # Verifica se o resultado da comparação foi VERDADEIRO
bne $t0, 1, positivo # Verifica se o resultado da comparação foi DIFERENTE de verdadeiro
j Modulo

Modulo: # Encontre o seu módulo
addi $t1, $t1, 2
div $a0, $t1
mflo $a0 # O valor que deverá ser reescrito sobre A
